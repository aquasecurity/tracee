---
# The PR workflow is triggered automatically whenever a pull request (PR) is
# opened to the main branch. It's also triggered when a PR is updated by adding
# commits to the PR branch.
name: PR
on:
  workflow_dispatch: {}
  pull_request:
    branches:
      - main
env:
  GO_VERSION: "1.17"
  OPA_VERSION: "v0.35.0"
jobs:
  verify-code:
    name: Verify Code
    runs-on: ubuntu-20.04
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Lint
        run: |
          if test -z "$(gofmt -l .)"; then
            echo "Congrats! There is nothing to fix."
          else
            echo "The following lines should be fixed."
            gofmt -s -d .
            exit 1
          fi

  # static checker needs tracee-ebpf compiled because of golang build check
  # without tracee-ebpf being built, it fails because of missing CGO prereqs
  # also: can't use default checker github action because tracee needs env vars
  analyze-code:
    name: "Analyze Code"
    needs:
      - verify-code
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install Dependencies
        uses: ./.github/actions/build-dependencies
        with:
          go-version: ${{ env.GO_VERSION }}
          opa-version: ${{ env.OPA_VERSION }}
      - name: Build Tracee
        run: |
          make clean
          make tracee-ebpf
      - name: Run go-vet
        run: |
          CGO_CFLAGS="-I$(pwd)/dist/libbpf" \
          CGO_LDFLAGS="-lelf -lz $(pwd)/dist/libbpf/libbpf.a" \
          go vet -tags ebpf,core ./...
      - name: Install staticcheck
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
      - name: Run staticcheck
        run: |
          CGO_CFLAGS="-I$(pwd)/dist/libbpf" \
          CGO_LDFLAGS="-lelf -lz $(pwd)/dist/libbpf/libbpf.a" \
          staticcheck -f stylish -tags ebpf,core ./...

  run-unit-tests:
    name: "Run Unit Tests"
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install Dependencies
        uses: ./.github/actions/build-dependencies
        with:
          go-version: ${{ env.GO_VERSION }}
          opa-version: ${{ env.OPA_VERSION }}
      - name: Run Unit Tests
        run: |
          make test-unit

  run-integration-tests:
    name: "Run Integration Tests"
    needs:
      - analyze-code
      - run-unit-tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install Dependencies
        uses: ./.github/actions/build-dependencies
        with:
          go-version: ${{ env.GO_VERSION }}
          opa-version: ${{ env.OPA_VERSION }}
      - name: Run Integration Tests
        run: |
          make test-integration

  verify-signatures:
    name: Verify Signatures
    needs:
      - analyze-code
      - run-unit-tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install Dependencies
        uses: ./.github/actions/build-dependencies
        with:
          go-version: ${{ env.GO_VERSION }}
          opa-version: ${{ env.OPA_VERSION }}
      - name: Build Signatures
        run: |
          make rules
      - name: Test Signatures
        run: |
          make test-rules

  # smoke-test-noncore job is using TRC-2 (Anti-Debugging) signature and tracee
  # non CO-RE container image to run a quick smoke test on each PR.
  #
  # NB: Ubuntu 20.04 provided by GitHub Actions runner does not support CO-RE.
  # Thus, we are running end-to-end signatures tests using tracee non CO-RE
  # container image.
  smoke-test-noncore:
    name: "[Smoke] Test non CO-RE"
    needs:
      - run-integration-tests
      - verify-signatures
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout main
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install Dependencies
        uses: ./.github/actions/build-dependencies
        with:
          go-version: ${{ env.GO_VERSION }}
          opa-version: ${{ env.OPA_VERSION }}
      - name: Build tracee image (full w/out BTFHUB)
        run: |
          BTFHUB=0 make -f builder/Makefile.tracee-container build-tracee-full
      - name: Install BPF
        run: |
          make install-bpf-nocore
      - name: Run tests
        run: |
          docker image pull aquasec/tracee-tester:latest
          go test -v -run "TestTraceeSignatures" ./tests/e2e/e2e_test.go \
            -tracee-image-ref "tracee:full" \
            -tracee-tester-image-ref "aquasec/tracee-tester:latest" \
            -tracee-signatures "TRC-2"

  # smoke-test-core job is using TRC-2 (Anti-Debugging) signature and tracee
  # CO-RE container image with embedded BTF info objects to run a quick smoke
  # test on each PR.
  smoke-test-core:
    name: "[Smoke] Test CO-RE"
    needs:
      - run-integration-tests
      - verify-signatures
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout main
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install Dependencies
        uses: ./.github/actions/build-dependencies
        with:
          go-version: ${{ env.GO_VERSION }}
          opa-version: ${{ env.OPA_VERSION }}
      - name: Built tracee BPF
        run: |
          make bpf-core
      - name: Build tracee image (slim w/ BTFHUB)
        run: |
          BTFHUB=1 make -f builder/Makefile.tracee-container build-tracee
      - name: Run tests
        run: |
          docker image pull aquasec/tracee-tester:latest
          go test -v -run "TestTraceeSignatures" ./tests/e2e/e2e_test.go \
            -tracee-image-ref "tracee:latest" \
            -tracee-tester-image-ref "aquasec/tracee-tester:latest" \
            -tracee-signatures "TRC-2"

  #
  # Test: TRC-2 with selected kernels.
  #
  CO-RE:
    runs-on: ubuntu-20.04
    needs:
      - smoke-test-core
    strategy:
      fail-fast: false
      matrix:
        signature:
          - "TRC-2"
        distro:
          - "stream8-4.18"
          - "stream9-5.14"
          - "fedora34-5.11"
          - "fedora35-5.14"
          - "fedora36-5.17"
          - "focal-5.4"
          - "focalhwe-5.13"
          - "jammy-5.15"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: "Pull test container image"
        run: |
          distro=$(echo ${{ matrix.distro }} | cut -d'-' -f1)
          docker image pull rafaeldtinoco/tracee-distro-tester:$distro
      - name: "Run tests"
        run: |
          distro=$(echo ${{ matrix.distro }} | cut -d'-' -f1)
          docker run --rm --privileged -v $(pwd):/tracee:rw \
            -e kvm_accel="tcg" \
            -e test_name=${{ matrix.signature }} \
            -e non_core=0 \
            -t rafaeldtinoco/tracee-distro-tester:$distro
  NON-CO-RE:
    runs-on: ubuntu-20.04
    needs:
      - smoke-test-noncore
    strategy:
      fail-fast: false
      matrix:
        signature:
          - "TRC-2"
        distro:
          - "stream8-4.18"
          - "stream9-5.14"
          - "fedora34-5.11"
          - "fedora35-5.14"
          - "fedora36-5.17"
          - "focal-5.4"
          - "focalhwe-5.13"
          - "jammy-5.15"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: "Pull test container image"
        run: |
          distro=$(echo ${{ matrix.distro }} | cut -d'-' -f1)
          docker image pull rafaeldtinoco/tracee-distro-tester:$distro
      - name: "Run tests"
        run: |
          distro=$(echo ${{ matrix.distro }} | cut -d'-' -f1)
          docker run --rm --privileged -v $(pwd):/tracee:rw \
            -e kvm_accel="tcg" \
            -e test_name=${{ matrix.signature }} \
            -e non_core=1 \
            -t rafaeldtinoco/tracee-distro-tester:$distro
