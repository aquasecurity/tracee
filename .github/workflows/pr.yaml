---
name: PR
on:
  workflow_dispatch: {}
  pull_request:
    branches:
      - main
env:
  GO_VERSION: "1.18"
  OPA_VERSION: "v0.41.0"
  TESTS: "TRC-102 TRC-103 TRC-104 TRC-105 TRC-107 TRC-1018 TRC-1014 TRC-1016 TRC-1010"
jobs:
  VERIFY-CODE:
    name: Verify Code
    runs-on: ubuntu-20.04
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Lint
        run: |
          if test -z "$(gofmt -l .)"; then
            echo "Congrats! There is nothing to fix."
          else
            echo "The following lines should be fixed."
            gofmt -s -d .
            exit 1
          fi
  ANALYZE-CODE:
    name: Analyze Code
    needs:
      - VERIFY-CODE
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install Dependencies
        uses: ./.github/actions/build-dependencies
        with:
          go-version: ${{ env.GO_VERSION }}
          opa-version: ${{ env.OPA_VERSION }}
      - name: Check Code Style
        run: |
          make check-fmt
      - name: Check Golang Vet
        run: |
          make check-vet
      - name: Check with StaticCheck
        run: |
          make check-staticcheck
  UNIT-TESTS:
    name: Unit Tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install Dependencies
        uses: ./.github/actions/build-dependencies
        with:
          go-version: ${{ env.GO_VERSION }}
          opa-version: ${{ env.OPA_VERSION }}
      - name: Run Unit Tests
        run: |
          make test-unit
  INTEGRATION-TESTS:
    name: Integration Tests
    needs:
      - ANALYZE-CODE
      - UNIT-TESTS
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install Dependencies
        uses: ./.github/actions/build-dependencies
        with:
          go-version: ${{ env.GO_VERSION }}
          opa-version: ${{ env.OPA_VERSION }}
      - name: Run Integration Tests
        run: |
          sudo env "PATH=$PATH" make test-integration
  VERIFY-SIGNATURES:
    name: Verify Signatures
    needs:
      - ANALYZE-CODE
      - UNIT-TESTS
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install Dependencies
        uses: ./.github/actions/build-dependencies
        with:
          go-version: ${{ env.GO_VERSION }}
          opa-version: ${{ env.OPA_VERSION }}
      - name: Build Signatures
        run: |
          make rules
      - name: Test Signatures
        run: |
          make test-rules
  CORE:
    needs:
      - ANALYZE-CODE
      - UNIT-TESTS
    strategy:
      fail-fast: false
      matrix:
        os: [focal54, focal513, jammy515, kinetic519, stream8, kinetic60]
    runs-on: ${{ matrix.os }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: "CORE"
        run: |
          DONTSLEEP=0 ISNONCORE=0 ./tests/kerneltest.sh
  NONCORE:
    needs:
      - ANALYZE-CODE
      - UNIT-TESTS
    strategy:
      fail-fast: false
      matrix:
        os: [focal54, focal513, jammy515, kinetic519, stream8, kinetic60, focal419]
    runs-on: ${{ matrix.os }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: "NONCORE"
        run: |
          DONTSLEEP=0 ISNONCORE=1 ./tests/kerneltest.sh
