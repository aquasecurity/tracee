name: Build Dependencies
description: |
  Install build dependencies to test and compile tracee artifacts
runs:
  using: composite
  steps:
    - name: Install Base Packages
      run: |
        sudo apt-get update
        sudo apt-get install -y bsdutils build-essential pkgconf
        sudo apt-get install -y zlib1g-dev libelf-dev libzstd-dev
        sudo apt-get install -y software-properties-common
      shell: bash
    - name: Install Golang
      run: |
        sudo rm -f /usr/bin/go
        sudo rm -f /usr/bin/gofmt
        curl -L -o /tmp/golang.tar.gz https://go.dev/dl/go1.24.0.linux-amd64.tar.gz
        sudo tar -C /usr/local -xzf /tmp/golang.tar.gz
        sudo ln -s /usr/local/go/bin/go /usr/bin/go
        sudo ln -s /usr/local/go/bin/gofmt /usr/bin/gofmt
      shell: bash
    - name: Install Clang 19
      run: |
        sudo apt-get install -y llvm-19 clang-19 clang-tools-19
        # Try to install clang-format-19 directly (might be a separate package)
        sudo apt-get install -y clang-format-19 || echo "clang-format-19 package not available"

        # Check if default clang is already version 19
        DEFAULT_CLANG_VERSION=$(clang --version 2>/dev/null | head -n1 | grep -o "clang version [0-9]*" | grep -o "[0-9]*" || echo "0")
        echo "Default clang version: $DEFAULT_CLANG_VERSION"

        if [ "$DEFAULT_CLANG_VERSION" != "19" ]; then
          echo "Setting up update-alternatives to make clang-19 the default"
          # Remove all existing LLVM alternatives that might conflict
          sudo update-alternatives --remove-all cc || true
          sudo update-alternatives --remove-all clang || true
          sudo update-alternatives --remove-all clang++ || true
          sudo update-alternatives --remove-all clang-format || true

          # Set up clang alternative
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-19 190 \
            --slave /usr/bin/cc cc /usr/bin/clang-19

          # Set up clang++ alternative
          if [ -f /usr/bin/clang++-19 ]; then
            sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-19 190
          fi

          # Set up clang-format alternative
          if [ -f /usr/bin/clang-format-19 ]; then
            sudo update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-19 190
          else
            echo "WARNING: clang-format-19 not found"
          fi
        else
          echo "Default clang is already version 19, no setup needed"
        fi
      shell: bash
    - name: Install staticchecker
      run: |
        GOROOT=/usr/local/go GOPATH=$HOME/go go install honnef.co/go/tools/cmd/staticcheck@2025.1
        sudo cp $HOME/go/bin/staticcheck /usr/bin/
      shell: bash
    - name: Install revive
      run: |
        GOROOT=/usr/local/go GOPATH=$HOME/go go install github.com/mgechev/revive@v1.7.0
        sudo cp $HOME/go/bin/revive /usr/bin/
      shell: bash
    - name: Install goimports-reviser
      run: |
        GOROOT=/usr/local/go GOPATH=$HOME/go go install github.com/incu6us/goimports-reviser/v3@v3.8.2
        sudo cp $HOME/go/bin/goimports-reviser /usr/bin/
      shell: bash
    - name: Install errcheck
      run: |
        GOROOT=/usr/local/go GOPATH=$HOME/go go install github.com/kisielk/errcheck@v1.9.0
        sudo cp $HOME/go/bin/errcheck /usr/bin/
      shell: bash
    - name: Install docker
      run: |
        sudo apt-get install --yes ca-certificates curl gnupg lsb-release
        sudo mkdir -p /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get --yes update
        sudo apt-get install --yes docker-ce docker-ce-cli containerd.io
      shell: bash
