// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.4
// source: types/api/v1beta1/event.proto

package v1beta1

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Severity int32

const (
	Severity_INFO     Severity = 0
	Severity_LOW      Severity = 1
	Severity_MEDIUM   Severity = 2
	Severity_HIGH     Severity = 3
	Severity_CRITICAL Severity = 4
)

// Enum value maps for Severity.
var (
	Severity_name = map[int32]string{
		0: "INFO",
		1: "LOW",
		2: "MEDIUM",
		3: "HIGH",
		4: "CRITICAL",
	}
	Severity_value = map[string]int32{
		"INFO":     0,
		"LOW":      1,
		"MEDIUM":   2,
		"HIGH":     3,
		"CRITICAL": 4,
	}
)

func (x Severity) Enum() *Severity {
	p := new(Severity)
	*p = x
	return p
}

func (x Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_types_api_v1beta1_event_proto_enumTypes[0].Descriptor()
}

func (Severity) Type() protoreflect.EnumType {
	return &file_types_api_v1beta1_event_proto_enumTypes[0]
}

func (x Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Severity.Descriptor instead.
func (Severity) EnumDescriptor() ([]byte, []int) {
	return file_types_api_v1beta1_event_proto_rawDescGZIP(), []int{0}
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamp.Timestamp   `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Id        uint32                 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Policies  *Policies              `protobuf:"bytes,4,opt,name=policies,proto3" json:"policies,omitempty"`
	Context   *Context               `protobuf:"bytes,5,opt,name=context,proto3" json:"context,omitempty"`
	EventData map[string]*EventValue `protobuf:"bytes,6,rep,name=event_data,json=eventData,proto3" json:"event_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Threat    *Threat                `protobuf:"bytes,7,opt,name=threat,proto3,oneof" json:"threat,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_api_v1beta1_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_types_api_v1beta1_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_types_api_v1beta1_event_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Event) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Event) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Event) GetPolicies() *Policies {
	if x != nil {
		return x.Policies
	}
	return nil
}

func (x *Event) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *Event) GetEventData() map[string]*EventValue {
	if x != nil {
		return x.EventData
	}
	return nil
}

func (x *Event) GetThreat() *Threat {
	if x != nil {
		return x.Threat
	}
	return nil
}

type Policies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matched []string `protobuf:"bytes,1,rep,name=matched,proto3" json:"matched,omitempty"`
}

func (x *Policies) Reset() {
	*x = Policies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_api_v1beta1_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Policies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policies) ProtoMessage() {}

func (x *Policies) ProtoReflect() protoreflect.Message {
	mi := &file_types_api_v1beta1_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Policies.ProtoReflect.Descriptor instead.
func (*Policies) Descriptor() ([]byte, []int) {
	return file_types_api_v1beta1_event_proto_rawDescGZIP(), []int{1}
}

func (x *Policies) GetMatched() []string {
	if x != nil {
		return x.Matched
	}
	return nil
}

type Context struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Process   *Process   `protobuf:"bytes,1,opt,name=process,proto3,oneof" json:"process,omitempty"`
	Container *Container `protobuf:"bytes,2,opt,name=container,proto3,oneof" json:"container,omitempty"`
	K8S       *K8S       `protobuf:"bytes,3,opt,name=k8s,proto3,oneof" json:"k8s,omitempty"`
}

func (x *Context) Reset() {
	*x = Context{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_api_v1beta1_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Context) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Context) ProtoMessage() {}

func (x *Context) ProtoReflect() protoreflect.Message {
	mi := &file_types_api_v1beta1_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Context.ProtoReflect.Descriptor instead.
func (*Context) Descriptor() ([]byte, []int) {
	return file_types_api_v1beta1_event_proto_rawDescGZIP(), []int{2}
}

func (x *Context) GetProcess() *Process {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *Context) GetContainer() *Container {
	if x != nil {
		return x.Container
	}
	return nil
}

func (x *Context) GetK8S() *K8S {
	if x != nil {
		return x.K8S
	}
	return nil
}

type Process struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Executable    *Executable           `protobuf:"bytes,1,opt,name=executable,proto3" json:"executable,omitempty"`
	EntityId      *wrappers.UInt32Value `protobuf:"bytes,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Pid           *wrappers.UInt32Value `protobuf:"bytes,3,opt,name=pid,proto3" json:"pid,omitempty"`
	NamespacedPid *wrappers.UInt32Value `protobuf:"bytes,4,opt,name=namespaced_pid,json=namespacedPid,proto3" json:"namespaced_pid,omitempty"`
	RealUser      *User                 `protobuf:"bytes,5,opt,name=real_user,json=realUser,proto3" json:"real_user,omitempty"`
	Thread        *Thread               `protobuf:"bytes,6,opt,name=thread,proto3" json:"thread,omitempty"`
	Parent        *Parent               `protobuf:"bytes,7,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
}

func (x *Process) Reset() {
	*x = Process{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_api_v1beta1_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Process) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Process) ProtoMessage() {}

func (x *Process) ProtoReflect() protoreflect.Message {
	mi := &file_types_api_v1beta1_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Process.ProtoReflect.Descriptor instead.
func (*Process) Descriptor() ([]byte, []int) {
	return file_types_api_v1beta1_event_proto_rawDescGZIP(), []int{3}
}

func (x *Process) GetExecutable() *Executable {
	if x != nil {
		return x.Executable
	}
	return nil
}

func (x *Process) GetEntityId() *wrappers.UInt32Value {
	if x != nil {
		return x.EntityId
	}
	return nil
}

func (x *Process) GetPid() *wrappers.UInt32Value {
	if x != nil {
		return x.Pid
	}
	return nil
}

func (x *Process) GetNamespacedPid() *wrappers.UInt32Value {
	if x != nil {
		return x.NamespacedPid
	}
	return nil
}

func (x *Process) GetRealUser() *User {
	if x != nil {
		return x.RealUser
	}
	return nil
}

func (x *Process) GetThread() *Thread {
	if x != nil {
		return x.Thread
	}
	return nil
}

func (x *Process) GetParent() *Parent {
	if x != nil {
		return x.Parent
	}
	return nil
}

type Parent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Executable    *Executable           `protobuf:"bytes,1,opt,name=executable,proto3" json:"executable,omitempty"`
	EntityId      *wrappers.UInt32Value `protobuf:"bytes,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Pid           *wrappers.UInt32Value `protobuf:"bytes,3,opt,name=pid,proto3" json:"pid,omitempty"`
	NamespacedPid *wrappers.UInt32Value `protobuf:"bytes,4,opt,name=namespaced_pid,json=namespacedPid,proto3,oneof" json:"namespaced_pid,omitempty"`
	RealUser      *User                 `protobuf:"bytes,5,opt,name=real_user,json=realUser,proto3,oneof" json:"real_user,omitempty"`
	Thread        *Thread               `protobuf:"bytes,6,opt,name=thread,proto3,oneof" json:"thread,omitempty"`
	Parent        *Process              `protobuf:"bytes,7,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
}

func (x *Parent) Reset() {
	*x = Parent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_api_v1beta1_event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parent) ProtoMessage() {}

func (x *Parent) ProtoReflect() protoreflect.Message {
	mi := &file_types_api_v1beta1_event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parent.ProtoReflect.Descriptor instead.
func (*Parent) Descriptor() ([]byte, []int) {
	return file_types_api_v1beta1_event_proto_rawDescGZIP(), []int{4}
}

func (x *Parent) GetExecutable() *Executable {
	if x != nil {
		return x.Executable
	}
	return nil
}

func (x *Parent) GetEntityId() *wrappers.UInt32Value {
	if x != nil {
		return x.EntityId
	}
	return nil
}

func (x *Parent) GetPid() *wrappers.UInt32Value {
	if x != nil {
		return x.Pid
	}
	return nil
}

func (x *Parent) GetNamespacedPid() *wrappers.UInt32Value {
	if x != nil {
		return x.NamespacedPid
	}
	return nil
}

func (x *Parent) GetRealUser() *User {
	if x != nil {
		return x.RealUser
	}
	return nil
}

func (x *Parent) GetThread() *Thread {
	if x != nil {
		return x.Thread
	}
	return nil
}

func (x *Parent) GetParent() *Process {
	if x != nil {
		return x.Parent
	}
	return nil
}

type Executable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Executable) Reset() {
	*x = Executable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_api_v1beta1_event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Executable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Executable) ProtoMessage() {}

func (x *Executable) ProtoReflect() protoreflect.Message {
	mi := &file_types_api_v1beta1_event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Executable.ProtoReflect.Descriptor instead.
func (*Executable) Descriptor() ([]byte, []int) {
	return file_types_api_v1beta1_event_proto_rawDescGZIP(), []int{5}
}

func (x *Executable) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *wrappers.UInt32Value `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_api_v1beta1_event_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_types_api_v1beta1_event_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_types_api_v1beta1_event_proto_rawDescGZIP(), []int{6}
}

func (x *User) GetId() *wrappers.UInt32Value {
	if x != nil {
		return x.Id
	}
	return nil
}

type Thread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start          *timestamp.Timestamp  `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	Name           string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	EntityId       *wrappers.UInt32Value `protobuf:"bytes,3,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Tid            *wrappers.UInt32Value `protobuf:"bytes,4,opt,name=tid,proto3" json:"tid,omitempty"`
	NamespacedTid  *wrappers.UInt32Value `protobuf:"bytes,5,opt,name=namespaced_tid,json=namespacedTid,proto3" json:"namespaced_tid,omitempty"`
	Syscall        string                `protobuf:"bytes,6,opt,name=syscall,proto3" json:"syscall,omitempty"`
	Compat         bool                  `protobuf:"varint,7,opt,name=compat,proto3" json:"compat,omitempty"`
	UserStackTrace *UserStackTrace       `protobuf:"bytes,8,opt,name=user_stack_trace,json=userStackTrace,proto3,oneof" json:"user_stack_trace,omitempty"`
}

func (x *Thread) Reset() {
	*x = Thread{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_api_v1beta1_event_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Thread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Thread) ProtoMessage() {}

func (x *Thread) ProtoReflect() protoreflect.Message {
	mi := &file_types_api_v1beta1_event_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Thread.ProtoReflect.Descriptor instead.
func (*Thread) Descriptor() ([]byte, []int) {
	return file_types_api_v1beta1_event_proto_rawDescGZIP(), []int{7}
}

func (x *Thread) GetStart() *timestamp.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Thread) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Thread) GetEntityId() *wrappers.UInt32Value {
	if x != nil {
		return x.EntityId
	}
	return nil
}

func (x *Thread) GetTid() *wrappers.UInt32Value {
	if x != nil {
		return x.Tid
	}
	return nil
}

func (x *Thread) GetNamespacedTid() *wrappers.UInt32Value {
	if x != nil {
		return x.NamespacedTid
	}
	return nil
}

func (x *Thread) GetSyscall() string {
	if x != nil {
		return x.Syscall
	}
	return ""
}

func (x *Thread) GetCompat() bool {
	if x != nil {
		return x.Compat
	}
	return false
}

func (x *Thread) GetUserStackTrace() *UserStackTrace {
	if x != nil {
		return x.UserStackTrace
	}
	return nil
}

type UserStackTrace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []*StackAddress `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *UserStackTrace) Reset() {
	*x = UserStackTrace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_api_v1beta1_event_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStackTrace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStackTrace) ProtoMessage() {}

func (x *UserStackTrace) ProtoReflect() protoreflect.Message {
	mi := &file_types_api_v1beta1_event_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStackTrace.ProtoReflect.Descriptor instead.
func (*UserStackTrace) Descriptor() ([]byte, []int) {
	return file_types_api_v1beta1_event_proto_rawDescGZIP(), []int{8}
}

func (x *UserStackTrace) GetAddresses() []*StackAddress {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type StackAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address uint64 `protobuf:"varint,1,opt,name=address,proto3" json:"address,omitempty"`
	Symbol  string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *StackAddress) Reset() {
	*x = StackAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_api_v1beta1_event_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StackAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackAddress) ProtoMessage() {}

func (x *StackAddress) ProtoReflect() protoreflect.Message {
	mi := &file_types_api_v1beta1_event_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackAddress.ProtoReflect.Descriptor instead.
func (*StackAddress) Descriptor() ([]byte, []int) {
	return file_types_api_v1beta1_event_proto_rawDescGZIP(), []int{9}
}

func (x *StackAddress) GetAddress() uint64 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *StackAddress) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type Container struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Image   *ContainerImage `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Started bool            `protobuf:"varint,4,opt,name=started,proto3" json:"started,omitempty"`
}

func (x *Container) Reset() {
	*x = Container{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_api_v1beta1_event_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container) ProtoMessage() {}

func (x *Container) ProtoReflect() protoreflect.Message {
	mi := &file_types_api_v1beta1_event_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container.ProtoReflect.Descriptor instead.
func (*Container) Descriptor() ([]byte, []int) {
	return file_types_api_v1beta1_event_proto_rawDescGZIP(), []int{10}
}

func (x *Container) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Container) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Container) GetImage() *ContainerImage {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Container) GetStarted() bool {
	if x != nil {
		return x.Started
	}
	return false
}

type ContainerImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RepoDigests []string `protobuf:"bytes,2,rep,name=repo_digests,json=repoDigests,proto3" json:"repo_digests,omitempty"`
	Name        string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ContainerImage) Reset() {
	*x = ContainerImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_api_v1beta1_event_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerImage) ProtoMessage() {}

func (x *ContainerImage) ProtoReflect() protoreflect.Message {
	mi := &file_types_api_v1beta1_event_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerImage.ProtoReflect.Descriptor instead.
func (*ContainerImage) Descriptor() ([]byte, []int) {
	return file_types_api_v1beta1_event_proto_rawDescGZIP(), []int{11}
}

func (x *ContainerImage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ContainerImage) GetRepoDigests() []string {
	if x != nil {
		return x.RepoDigests
	}
	return nil
}

func (x *ContainerImage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type K8S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pod       *Pod          `protobuf:"bytes,1,opt,name=pod,proto3" json:"pod,omitempty"`
	Namespace *K8SNamespace `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *K8S) Reset() {
	*x = K8S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_api_v1beta1_event_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8S) ProtoMessage() {}

func (x *K8S) ProtoReflect() protoreflect.Message {
	mi := &file_types_api_v1beta1_event_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8S.ProtoReflect.Descriptor instead.
func (*K8S) Descriptor() ([]byte, []int) {
	return file_types_api_v1beta1_event_proto_rawDescGZIP(), []int{12}
}

func (x *K8S) GetPod() *Pod {
	if x != nil {
		return x.Pod
	}
	return nil
}

func (x *K8S) GetNamespace() *K8SNamespace {
	if x != nil {
		return x.Namespace
	}
	return nil
}

type Pod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uid    string            `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Labels map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Pod) Reset() {
	*x = Pod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_api_v1beta1_event_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pod) ProtoMessage() {}

func (x *Pod) ProtoReflect() protoreflect.Message {
	mi := &file_types_api_v1beta1_event_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pod.ProtoReflect.Descriptor instead.
func (*Pod) Descriptor() ([]byte, []int) {
	return file_types_api_v1beta1_event_proto_rawDescGZIP(), []int{13}
}

func (x *Pod) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pod) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Pod) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type K8SNamespace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *K8SNamespace) Reset() {
	*x = K8SNamespace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_api_v1beta1_event_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SNamespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SNamespace) ProtoMessage() {}

func (x *K8SNamespace) ProtoReflect() protoreflect.Message {
	mi := &file_types_api_v1beta1_event_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SNamespace.ProtoReflect.Descriptor instead.
func (*K8SNamespace) Descriptor() ([]byte, []int) {
	return file_types_api_v1beta1_event_proto_rawDescGZIP(), []int{14}
}

func (x *K8SNamespace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Threat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string   `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Mitre       *Mitre   `protobuf:"bytes,2,opt,name=mitre,proto3" json:"mitre,omitempty"`
	Severity    Severity `protobuf:"varint,3,opt,name=severity,proto3,enum=tracee.v1beta1.Severity" json:"severity,omitempty"`
}

func (x *Threat) Reset() {
	*x = Threat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_api_v1beta1_event_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Threat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Threat) ProtoMessage() {}

func (x *Threat) ProtoReflect() protoreflect.Message {
	mi := &file_types_api_v1beta1_event_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Threat.ProtoReflect.Descriptor instead.
func (*Threat) Descriptor() ([]byte, []int) {
	return file_types_api_v1beta1_event_proto_rawDescGZIP(), []int{15}
}

func (x *Threat) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Threat) GetMitre() *Mitre {
	if x != nil {
		return x.Mitre
	}
	return nil
}

func (x *Threat) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_INFO
}

type Mitre struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tactic    *MitreTactic    `protobuf:"bytes,1,opt,name=tactic,proto3" json:"tactic,omitempty"`
	Technique *MitreTechnique `protobuf:"bytes,2,opt,name=technique,proto3" json:"technique,omitempty"`
}

func (x *Mitre) Reset() {
	*x = Mitre{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_api_v1beta1_event_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mitre) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mitre) ProtoMessage() {}

func (x *Mitre) ProtoReflect() protoreflect.Message {
	mi := &file_types_api_v1beta1_event_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mitre.ProtoReflect.Descriptor instead.
func (*Mitre) Descriptor() ([]byte, []int) {
	return file_types_api_v1beta1_event_proto_rawDescGZIP(), []int{16}
}

func (x *Mitre) GetTactic() *MitreTactic {
	if x != nil {
		return x.Tactic
	}
	return nil
}

func (x *Mitre) GetTechnique() *MitreTechnique {
	if x != nil {
		return x.Technique
	}
	return nil
}

type MitreTactic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MitreTactic) Reset() {
	*x = MitreTactic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_api_v1beta1_event_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MitreTactic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MitreTactic) ProtoMessage() {}

func (x *MitreTactic) ProtoReflect() protoreflect.Message {
	mi := &file_types_api_v1beta1_event_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MitreTactic.ProtoReflect.Descriptor instead.
func (*MitreTactic) Descriptor() ([]byte, []int) {
	return file_types_api_v1beta1_event_proto_rawDescGZIP(), []int{17}
}

func (x *MitreTactic) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MitreTechnique struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MitreTechnique) Reset() {
	*x = MitreTechnique{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_api_v1beta1_event_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MitreTechnique) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MitreTechnique) ProtoMessage() {}

func (x *MitreTechnique) ProtoReflect() protoreflect.Message {
	mi := &file_types_api_v1beta1_event_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MitreTechnique.ProtoReflect.Descriptor instead.
func (*MitreTechnique) Descriptor() ([]byte, []int) {
	return file_types_api_v1beta1_event_proto_rawDescGZIP(), []int{18}
}

func (x *MitreTechnique) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MitreTechnique) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_types_api_v1beta1_event_proto protoreflect.FileDescriptor

var file_types_api_v1beta1_event_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x22, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xad, 0x03, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x08,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x65, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x43, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x06, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x54, 0x68, 0x72, 0x65,
	0x61, 0x74, 0x48, 0x00, 0x52, 0x06, 0x74, 0x68, 0x72, 0x65, 0x61, 0x74, 0x88, 0x01, 0x01, 0x1a,
	0x58, 0x0a, 0x0e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x74, 0x22, 0x24, 0x0a, 0x08, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x22, 0xcd, 0x01, 0x0a, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x36, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x48, 0x00, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3c,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x48, 0x01, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x03,
	0x6b, 0x38, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4b, 0x38, 0x73, 0x48, 0x02,
	0x52, 0x03, 0x6b, 0x38, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6b, 0x38, 0x73, 0x22, 0x98, 0x03, 0x0a, 0x07, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x2e, 0x0a,
	0x03, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x43, 0x0a,
	0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x64, 0x5f, 0x70, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x64, 0x50,
	0x69, 0x64, 0x12, 0x31, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x72, 0x65, 0x61,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x06, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x06, 0x74,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x33, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xd3, 0x03, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x09,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x48, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x64, 0x5f, 0x70, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52,
	0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x64, 0x50, 0x69, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x36, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x48, 0x01, 0x52, 0x08, 0x72, 0x65,
	0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x06, 0x74, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x48, 0x02, 0x52, 0x06, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x88, 0x01, 0x01, 0x12, 0x34,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x48, 0x03, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x64, 0x5f, 0x70, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x65, 0x61, 0x6c,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x20, 0x0a, 0x0a, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x94, 0x03, 0x0a, 0x06, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x30,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x2e, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12,
	0x43, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x64, 0x5f, 0x74, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x64, 0x54, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x12, 0x4d, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x48, 0x00, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x22, 0x4c, 0x0a, 0x0e, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x09, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x40, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x63,
	0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x7f, 0x0a, 0x09, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x22, 0x57, 0x0a, 0x0e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x68, 0x0a, 0x03, 0x4b, 0x38, 0x73, 0x12, 0x25, 0x0a, 0x03, 0x70,
	0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6f, 0x64, 0x52, 0x03, 0x70,
	0x6f, 0x64, 0x12, 0x3a, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4b, 0x38, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x9f,
	0x01, 0x0a, 0x03, 0x50, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6f,
	0x64, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x22, 0x0a, 0x0c, 0x4b, 0x38, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x06, 0x54, 0x68, 0x72, 0x65, 0x61, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2b, 0x0a, 0x05, 0x6d, 0x69, 0x74, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x4d, 0x69, 0x74, 0x72, 0x65, 0x52, 0x05, 0x6d, 0x69, 0x74, 0x72, 0x65, 0x12, 0x34,
	0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65,
	0x72, 0x69, 0x74, 0x79, 0x22, 0x7a, 0x0a, 0x05, 0x4d, 0x69, 0x74, 0x72, 0x65, 0x12, 0x33, 0x0a,
	0x06, 0x74, 0x61, 0x63, 0x74, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d,
	0x69, 0x74, 0x72, 0x65, 0x54, 0x61, 0x63, 0x74, 0x69, 0x63, 0x52, 0x06, 0x74, 0x61, 0x63, 0x74,
	0x69, 0x63, 0x12, 0x3c, 0x0a, 0x09, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x69, 0x74, 0x72, 0x65, 0x54, 0x65, 0x63, 0x68,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x52, 0x09, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x22, 0x21, 0x0a, 0x0b, 0x4d, 0x69, 0x74, 0x72, 0x65, 0x54, 0x61, 0x63, 0x74, 0x69, 0x63, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x0e, 0x4d, 0x69, 0x74, 0x72, 0x65, 0x54, 0x65, 0x63, 0x68,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x2a, 0x41, 0x0a, 0x08, 0x53, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x44, 0x49,
	0x55, 0x4d, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x49, 0x47, 0x48, 0x10, 0x03, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x10, 0x04, 0x42, 0x2b, 0x5a, 0x29,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x2f, 0x61, 0x71, 0x75, 0x61, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_types_api_v1beta1_event_proto_rawDescOnce sync.Once
	file_types_api_v1beta1_event_proto_rawDescData = file_types_api_v1beta1_event_proto_rawDesc
)

func file_types_api_v1beta1_event_proto_rawDescGZIP() []byte {
	file_types_api_v1beta1_event_proto_rawDescOnce.Do(func() {
		file_types_api_v1beta1_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_api_v1beta1_event_proto_rawDescData)
	})
	return file_types_api_v1beta1_event_proto_rawDescData
}

var file_types_api_v1beta1_event_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_types_api_v1beta1_event_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_types_api_v1beta1_event_proto_goTypes = []interface{}{
	(Severity)(0),                // 0: tracee.v1beta1.Severity
	(*Event)(nil),                // 1: tracee.v1beta1.Event
	(*Policies)(nil),             // 2: tracee.v1beta1.Policies
	(*Context)(nil),              // 3: tracee.v1beta1.Context
	(*Process)(nil),              // 4: tracee.v1beta1.Process
	(*Parent)(nil),               // 5: tracee.v1beta1.Parent
	(*Executable)(nil),           // 6: tracee.v1beta1.Executable
	(*User)(nil),                 // 7: tracee.v1beta1.User
	(*Thread)(nil),               // 8: tracee.v1beta1.Thread
	(*UserStackTrace)(nil),       // 9: tracee.v1beta1.UserStackTrace
	(*StackAddress)(nil),         // 10: tracee.v1beta1.StackAddress
	(*Container)(nil),            // 11: tracee.v1beta1.Container
	(*ContainerImage)(nil),       // 12: tracee.v1beta1.ContainerImage
	(*K8S)(nil),                  // 13: tracee.v1beta1.K8s
	(*Pod)(nil),                  // 14: tracee.v1beta1.Pod
	(*K8SNamespace)(nil),         // 15: tracee.v1beta1.K8sNamespace
	(*Threat)(nil),               // 16: tracee.v1beta1.Threat
	(*Mitre)(nil),                // 17: tracee.v1beta1.Mitre
	(*MitreTactic)(nil),          // 18: tracee.v1beta1.MitreTactic
	(*MitreTechnique)(nil),       // 19: tracee.v1beta1.MitreTechnique
	nil,                          // 20: tracee.v1beta1.Event.EventDataEntry
	nil,                          // 21: tracee.v1beta1.Pod.LabelsEntry
	(*timestamp.Timestamp)(nil),  // 22: google.protobuf.Timestamp
	(*wrappers.UInt32Value)(nil), // 23: google.protobuf.UInt32Value
	(*EventValue)(nil),           // 24: tracee.v1beta1.EventValue
}
var file_types_api_v1beta1_event_proto_depIdxs = []int32{
	22, // 0: tracee.v1beta1.Event.timestamp:type_name -> google.protobuf.Timestamp
	2,  // 1: tracee.v1beta1.Event.policies:type_name -> tracee.v1beta1.Policies
	3,  // 2: tracee.v1beta1.Event.context:type_name -> tracee.v1beta1.Context
	20, // 3: tracee.v1beta1.Event.event_data:type_name -> tracee.v1beta1.Event.EventDataEntry
	16, // 4: tracee.v1beta1.Event.threat:type_name -> tracee.v1beta1.Threat
	4,  // 5: tracee.v1beta1.Context.process:type_name -> tracee.v1beta1.Process
	11, // 6: tracee.v1beta1.Context.container:type_name -> tracee.v1beta1.Container
	13, // 7: tracee.v1beta1.Context.k8s:type_name -> tracee.v1beta1.K8s
	6,  // 8: tracee.v1beta1.Process.executable:type_name -> tracee.v1beta1.Executable
	23, // 9: tracee.v1beta1.Process.entity_id:type_name -> google.protobuf.UInt32Value
	23, // 10: tracee.v1beta1.Process.pid:type_name -> google.protobuf.UInt32Value
	23, // 11: tracee.v1beta1.Process.namespaced_pid:type_name -> google.protobuf.UInt32Value
	7,  // 12: tracee.v1beta1.Process.real_user:type_name -> tracee.v1beta1.User
	8,  // 13: tracee.v1beta1.Process.thread:type_name -> tracee.v1beta1.Thread
	5,  // 14: tracee.v1beta1.Process.parent:type_name -> tracee.v1beta1.Parent
	6,  // 15: tracee.v1beta1.Parent.executable:type_name -> tracee.v1beta1.Executable
	23, // 16: tracee.v1beta1.Parent.entity_id:type_name -> google.protobuf.UInt32Value
	23, // 17: tracee.v1beta1.Parent.pid:type_name -> google.protobuf.UInt32Value
	23, // 18: tracee.v1beta1.Parent.namespaced_pid:type_name -> google.protobuf.UInt32Value
	7,  // 19: tracee.v1beta1.Parent.real_user:type_name -> tracee.v1beta1.User
	8,  // 20: tracee.v1beta1.Parent.thread:type_name -> tracee.v1beta1.Thread
	4,  // 21: tracee.v1beta1.Parent.parent:type_name -> tracee.v1beta1.Process
	23, // 22: tracee.v1beta1.User.id:type_name -> google.protobuf.UInt32Value
	22, // 23: tracee.v1beta1.Thread.start:type_name -> google.protobuf.Timestamp
	23, // 24: tracee.v1beta1.Thread.entity_id:type_name -> google.protobuf.UInt32Value
	23, // 25: tracee.v1beta1.Thread.tid:type_name -> google.protobuf.UInt32Value
	23, // 26: tracee.v1beta1.Thread.namespaced_tid:type_name -> google.protobuf.UInt32Value
	9,  // 27: tracee.v1beta1.Thread.user_stack_trace:type_name -> tracee.v1beta1.UserStackTrace
	10, // 28: tracee.v1beta1.UserStackTrace.addresses:type_name -> tracee.v1beta1.StackAddress
	12, // 29: tracee.v1beta1.Container.image:type_name -> tracee.v1beta1.ContainerImage
	14, // 30: tracee.v1beta1.K8s.pod:type_name -> tracee.v1beta1.Pod
	15, // 31: tracee.v1beta1.K8s.namespace:type_name -> tracee.v1beta1.K8sNamespace
	21, // 32: tracee.v1beta1.Pod.labels:type_name -> tracee.v1beta1.Pod.LabelsEntry
	17, // 33: tracee.v1beta1.Threat.mitre:type_name -> tracee.v1beta1.Mitre
	0,  // 34: tracee.v1beta1.Threat.severity:type_name -> tracee.v1beta1.Severity
	18, // 35: tracee.v1beta1.Mitre.tactic:type_name -> tracee.v1beta1.MitreTactic
	19, // 36: tracee.v1beta1.Mitre.technique:type_name -> tracee.v1beta1.MitreTechnique
	24, // 37: tracee.v1beta1.Event.EventDataEntry.value:type_name -> tracee.v1beta1.EventValue
	38, // [38:38] is the sub-list for method output_type
	38, // [38:38] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_types_api_v1beta1_event_proto_init() }
func file_types_api_v1beta1_event_proto_init() {
	if File_types_api_v1beta1_event_proto != nil {
		return
	}
	file_types_api_v1beta1_event_data_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_types_api_v1beta1_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_api_v1beta1_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Policies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_api_v1beta1_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Context); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_api_v1beta1_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Process); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_api_v1beta1_event_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_api_v1beta1_event_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Executable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_api_v1beta1_event_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_api_v1beta1_event_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Thread); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_api_v1beta1_event_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStackTrace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_api_v1beta1_event_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StackAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_api_v1beta1_event_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Container); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_api_v1beta1_event_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_api_v1beta1_event_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_api_v1beta1_event_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_api_v1beta1_event_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SNamespace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_api_v1beta1_event_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Threat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_api_v1beta1_event_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mitre); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_api_v1beta1_event_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MitreTactic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_api_v1beta1_event_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MitreTechnique); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_types_api_v1beta1_event_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_types_api_v1beta1_event_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_types_api_v1beta1_event_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_types_api_v1beta1_event_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_types_api_v1beta1_event_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_api_v1beta1_event_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_api_v1beta1_event_proto_goTypes,
		DependencyIndexes: file_types_api_v1beta1_event_proto_depIdxs,
		EnumInfos:         file_types_api_v1beta1_event_proto_enumTypes,
		MessageInfos:      file_types_api_v1beta1_event_proto_msgTypes,
	}.Build()
	File_types_api_v1beta1_event_proto = out.File
	file_types_api_v1beta1_event_proto_rawDesc = nil
	file_types_api_v1beta1_event_proto_goTypes = nil
	file_types_api_v1beta1_event_proto_depIdxs = nil
}
