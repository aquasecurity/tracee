.\" Automatically generated by Pandoc 3.2
.\"
.TH "TRACEE\-ILLEGITIMATE\-SHELL" "1" "" "" "Tracee Event Manual"
.SS NAME
\f[B]illegitimate_shell\f[R] \- detect web servers spawning shell
processes
.SS DESCRIPTION
This event detects when a web server program spawns a shell process.
Under normal circumstances, web servers serve content and handle web
requests without needing shell access.
The presence of a shell being spawned by a web server often indicates a
compromise, such as a web application vulnerability being exploited for
command execution.
.PP
This detection is particularly important as web shells and command
injection attacks are common methods for attackers to gain unauthorized
access to web servers and execute arbitrary commands.
.SS SIGNATURE METADATA
.IP \[bu] 2
\f[B]ID\f[R]: TRC\-1016
.IP \[bu] 2
\f[B]Version\f[R]: 1
.IP \[bu] 2
\f[B]Severity\f[R]: 2
.IP \[bu] 2
\f[B]Category\f[R]: initial\-access
.IP \[bu] 2
\f[B]Technique\f[R]: Exploit Public\-Facing Application
.IP \[bu] 2
\f[B]MITRE ID\f[R]:
attack\-pattern\[en]3f886f2a\-874f\-4333\-b794\-aa6075009b1c
.IP \[bu] 2
\f[B]MITRE External ID\f[R]: T1190
.SS EVENT SETS
\f[B]signatures\f[R], \f[B]default\f[R]
.SS DATA FIELDS
This signature event uses fields from the underlying security_bprm_check
event:
.TP
\f[B]pathname\f[R] (\f[I]string\f[R])
Path to the shell being executed
.TP
\f[B]comm\f[R] (\f[I]string\f[R])
Name of the web server process
.TP
\f[B]interpreter\f[R] (\f[I]string\f[R])
Path to the interpreter if script execution
.TP
\f[B]stdin_type\f[R] (\f[I]string\f[R])
Type of standard input
.SS DEPENDENCIES
.IP \[bu] 2
\f[CR]security_bprm_check\f[R]: Monitor program execution attempts
.SS USE CASES
.IP \[bu] 2
\f[B]Web security\f[R]: Detect web shell installations
.IP \[bu] 2
\f[B]Command injection\f[R]: Identify successful exploits
.IP \[bu] 2
\f[B]Intrusion detection\f[R]: Spot initial access attempts
.IP \[bu] 2
\f[B]Incident response\f[R]: Track compromise indicators
.SS SHELL EXECUTION PATTERNS
Suspicious patterns to monitor:
.IP \[bu] 2
Direct shell execution (sh, bash)
.IP \[bu] 2
Command interpreters (python, perl)
.IP \[bu] 2
System utilities (awk, sed)
.IP \[bu] 2
Network tools (nc, curl)
.IP \[bu] 2
Custom interpreters
.SS ATTACK VECTORS
Common exploitation methods:
.IP \[bu] 2
\f[B]Web shells\f[R]: Malicious web scripts
.IP \[bu] 2
\f[B]Command injection\f[R]: User input exploitation
.IP \[bu] 2
\f[B]File upload\f[R]: Malicious file execution
.IP \[bu] 2
\f[B]CGI exploitation\f[R]: Script parameter abuse
.SS RISK ASSESSMENT
Risk factors to consider:
.IP \[bu] 2
\f[B]Remote Access\f[R]: Shell provides system access
.IP \[bu] 2
\f[B]Command Execution\f[R]: Full system commands
.IP \[bu] 2
\f[B]Persistence\f[R]: Web shell remains active
.IP \[bu] 2
\f[B]Privilege Level\f[R]: Runs as web server user
.SS LEGITIMATE USES
Rare but valid scenarios:
.IP \[bu] 2
Maintenance scripts
.IP \[bu] 2
System health checks
.IP \[bu] 2
Automated backups
.IP \[bu] 2
Development debugging
.SS MITIGATION
Recommended security controls:
.IP \[bu] 2
Web application firewalls
.IP \[bu] 2
Input validation
.IP \[bu] 2
File upload restrictions
.IP \[bu] 2
Process execution controls
.IP \[bu] 2
Regular security audits
.SS RELATED EVENTS
.IP \[bu] 2
\f[B]security_bprm_check\f[R]: Binary execution checks
.IP \[bu] 2
\f[B]process_execute\f[R]: Process execution tracking
.IP \[bu] 2
\f[B]dropped_executable\f[R]: New executable detection
.IP \[bu] 2
\f[B]dynamic_code_loading\f[R]: Runtime code execution
