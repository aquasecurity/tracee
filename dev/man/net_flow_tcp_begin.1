.\" Automatically generated by Pandoc 3.2
.\"
.TH "TRACEE\-NET\-FLOW\-TCP\-BEGIN" "1" "" "" "Tracee Event Manual"
.SS NAME
\f[B]net_flow_tcp_begin\f[R] \- TCP connection initiation detected
.SS DESCRIPTION
Triggered when a TCP connection is initiated, derived from raw network
events captured by cgroup skb eBPF programs.
This event monitors the TCP protocol\[cq]s initiation phase by analyzing
IP and TCP headers, specifically focusing on SYN, ACK, and FIN flag
statuses to identify the start of TCP communication flows.
.PP
The event leverages kernel\-level packet capture to provide critical
data for network monitoring and security analysis, offering visibility
into TCP connection establishment patterns.
.PP
This event is useful for:
.IP \[bu] 2
\f[B]Network monitoring\f[R]: Track TCP connection initiation patterns
.IP \[bu] 2
\f[B]Security analysis\f[R]: Detect unauthorized communication attempts
.IP \[bu] 2
\f[B]Performance monitoring\f[R]: Analyze network flow characteristics
.IP \[bu] 2
\f[B]Traffic analysis\f[R]: Monitor connection establishment patterns
.SS EVENT SETS
\f[B]network_events\f[R], \f[B]flows\f[R]
.SS DATA FIELDS
.TP
\f[B]conn_direction\f[R] (\f[I]string\f[R])
Connection direction classified as `incoming' or `outgoing' based on
packet direction and SYN flag status
.TP
\f[B]src\f[R] (\f[I]string\f[R])
Source IP address extracted from the IP header
.TP
\f[B]dst\f[R] (\f[I]string\f[R])
Destination IP address from the IP header
.TP
\f[B]src_port\f[R] (\f[I]uint16\f[R])
Source port from the TCP header
.TP
\f[B]dst_port\f[R] (\f[I]uint16\f[R])
Destination port from the TCP header
.TP
\f[B]src_dns\f[R] (\f[I][]string\f[R])
Domain names related to the source IP, resolved through DNS cache
.TP
\f[B]dst_dns\f[R] (\f[I][]string\f[R])
Domain names associated with the destination IP, resolved via DNS cache
.SS DEPENDENCIES
\f[B]Event Dependencies:\f[R]
.IP \[bu] 2
net_packet_flow_base: Base network packet flow event for network packet
capture
.SS USE CASES
.IP \[bu] 2
\f[B]Network security monitoring\f[R]: Detect unusual connection
patterns or unauthorized communications
.IP \[bu] 2
\f[B]Traffic analysis\f[R]: Monitor TCP connection establishment trends
.IP \[bu] 2
\f[B]Performance monitoring\f[R]: Analyze connection initiation latency
and patterns
.IP \[bu] 2
\f[B]Incident response\f[R]: Track network communication during security
incidents
.IP \[bu] 2
\f[B]Compliance monitoring\f[R]: Ensure network communications follow
policy
.SS IMPLEMENTATION DETAILS
The event uses sophisticated packet capture mechanisms:
.IP \[bu] 2
\f[B]Flag Analysis\f[R]: Monitors SYN, ACK, and FIN flags for connection
state detection
.IP \[bu] 2
\f[B]Low Overhead\f[R]: Optimized for minimal system impact during
high\-traffic scenarios
.IP \[bu] 2
\f[B]Header Parsing\f[R]: Efficiently extracts IP and TCP header
information
.IP \[bu] 2
\f[B]DNS Integration\f[R]: Correlates IP addresses with domain names
when available
.SS PERFORMANCE CONSIDERATIONS
Event efficiency depends on:
.IP \[bu] 2
Network traffic volume
.IP \[bu] 2
Complexity of monitored TCP flows
.IP \[bu] 2
System resources and configuration
.IP \[bu] 2
Proper data management and analysis
.SS RELATED EVENTS
.IP \[bu] 2
\f[B]net_tcp_connect\f[R]: Similar event based on
security_socket_connect calls
.IP \[bu] 2
\f[B]net_flow_tcp_end\f[R]: TCP connection termination events
.IP \[bu] 2
\f[B]security_socket_connect\f[R]: Socket connection security events
.IP \[bu] 2
\f[B]net_packet_tcp\f[R]: Individual TCP packet capture events
