.\" Automatically generated by Pandoc 3.2
.\"
.TH "TRACEE\-STDIO\-OVER\-SOCKET" "1" "" "" "Tracee Event Manual"
.SS NAME
\f[B]stdio_over_socket\f[R] \- process standard input/output over socket
detection
.SS DESCRIPTION
Triggered when a process has its standard input/output redirected to a
socket, which is commonly associated with reverse shell attacks.
This signature detects when an attacker establishes an interactive shell
from a compromised target back to their machine by redirecting stdin,
stdout, and stderr through network sockets.
.PP
Standard I/O redirection to sockets is a fundamental technique used in
reverse shells, where the attacker gains interactive control over a
compromised system.
This behavior is highly suspicious in normal operations and typically
indicates malicious activity.
.PP
This signature is useful for:
.IP \[bu] 2
\f[B]Reverse shell detection\f[R]: Identify active reverse shell
connections
.IP \[bu] 2
\f[B]Command and control monitoring\f[R]: Detect interactive malicious
sessions
.IP \[bu] 2
\f[B]Post\-exploitation activity\f[R]: Identify attacker interaction
with compromised systems
.SS SIGNATURE METADATA
.IP \[bu] 2
\f[B]ID\f[R]: TRC\-101
.IP \[bu] 2
\f[B]Version\f[R]: 2
.IP \[bu] 2
\f[B]Severity\f[R]: 3 (High threat level)
.IP \[bu] 2
\f[B]Category\f[R]: execution
.IP \[bu] 2
\f[B]Technique\f[R]: Unix Shell
.IP \[bu] 2
\f[B]MITRE ATT&CK\f[R]: T1059.004
.SS EVENT SETS
\f[B]signatures\f[R], \f[B]execution\f[R]
.SS DATA FIELDS
.TP
\f[B]ip_address\f[R] (\f[I]string\f[R])
The IP address associated with the socket connection
.TP
\f[B]port\f[R] (\f[I]string\f[R])
The port number associated with the socket connection
.TP
\f[B]file_descriptor\f[R] (\f[I]integer\f[R])
The file descriptor of the standard input/output (0=stdin, 1=stdout,
2=stderr)
.SS DEPENDENCIES
\f[B]System Events:\f[R]
.IP \[bu] 2
security_socket_connect (required): Monitors socket connection
establishment
.IP \[bu] 2
socket_dup (required): Monitors socket duplication for I/O redirection
.SS DETECTION LOGIC
The signature monitors for:
.IP "1." 3
\f[B]Socket connections\f[R] being established to external addresses
.IP "2." 3
\f[B]File descriptor duplication\f[R] of sockets to standard I/O
descriptors (0, 1, 2)
.IP "3." 3
\f[B]Process correlation\f[R] to identify which processes are
redirecting I/O
.SS USE CASES
.IP \[bu] 2
\f[B]Intrusion detection\f[R]: Identify active reverse shell connections
.IP \[bu] 2
\f[B]Incident response\f[R]: Detect ongoing attacker interaction with
compromised systems
.IP \[bu] 2
\f[B]Network security\f[R]: Monitor for unauthorized outbound
interactive sessions
.IP \[bu] 2
\f[B]Malware analysis\f[R]: Identify payload behavior in sandbox
environments
.IP \[bu] 2
\f[B]Forensic investigation\f[R]: Track attacker command and control
activities
.SS REVERSE SHELL TECHNIQUES
Common reverse shell establishment methods:
.IP \[bu] 2
\f[B]Netcat reverse shells\f[R]: Using nc to redirect shell I/O over
network
.IP \[bu] 2
\f[B]Bash reverse shells\f[R]: Direct bash socket redirection techniques
.IP \[bu] 2
\f[B]Python/Perl/PHP shells\f[R]: Scripting language\-based reverse
shells
.IP \[bu] 2
\f[B]Binary exploitation\f[R]: Buffer overflow leading to shell
redirection
.IP \[bu] 2
\f[B]Web shell uploads\f[R]: Uploaded scripts creating reverse
connections
.SS SOCKET REDIRECTION METHODS
Attackers typically use these techniques:
.IP \[bu] 2
\f[B]dup2() system calls\f[R]: Duplicating socket file descriptors to
stdin/stdout/stderr
.IP \[bu] 2
\f[B]Process spawning\f[R]: Creating child processes with redirected I/O
.IP \[bu] 2
\f[B]Shell command execution\f[R]: Running commands with I/O redirection
operators
.IP \[bu] 2
\f[B]Programming language sockets\f[R]: Using socket libraries to create
interactive sessions
.SS NETWORK INDICATORS
Look for associated network patterns:
.IP \[bu] 2
\f[B]Outbound connections\f[R] to unexpected IP addresses
.IP \[bu] 2
\f[B]Non\-standard ports\f[R] for interactive sessions
.IP \[bu] 2
\f[B]Persistent connections\f[R] with bidirectional traffic
.IP \[bu] 2
\f[B]Command\-like traffic patterns\f[R] in network streams
.SS EVASION TECHNIQUES
Attackers may attempt evasion through:
.IP \[bu] 2
\f[B]Encryption\f[R]: Using SSL/TLS to encrypt reverse shell traffic
.IP \[bu] 2
\f[B]Protocol tunneling\f[R]: Hiding shells within legitimate protocols
(HTTP, DNS)
.IP \[bu] 2
\f[B]Traffic obfuscation\f[R]: Disguising shell traffic as normal
application data
.IP \[bu] 2
\f[B]Timing manipulation\f[R]: Using delays to avoid detection
thresholds
.SS LEGITIMATE SCENARIOS
Some legitimate uses that may trigger detection:
.IP \[bu] 2
\f[B]Remote administration tools\f[R]: SSH, RDP, VNC sessions
.IP \[bu] 2
\f[B]Development tools\f[R]: Remote debugging or development
environments
.IP \[bu] 2
\f[B]Automation scripts\f[R]: Legitimate automation connecting to remote
systems
.IP \[bu] 2
\f[B]Monitoring tools\f[R]: System monitoring with network reporting
.SS PREVENTION STRATEGIES
.IP \[bu] 2
\f[B]Network segmentation\f[R]: Limit outbound connectivity from
sensitive systems
.IP \[bu] 2
\f[B]Egress filtering\f[R]: Block unnecessary outbound ports and
protocols
.IP \[bu] 2
\f[B]Application whitelisting\f[R]: Prevent unauthorized binary
execution
.IP \[bu] 2
\f[B]Process monitoring\f[R]: Monitor process creation and I/O
redirection
.IP \[bu] 2
\f[B]Network monitoring\f[R]: Detect unusual outbound connection
patterns
.SS RELATED EVENTS
.IP \[bu] 2
\f[B]security_socket_connect\f[R]: Primary detection for socket
connections
.IP \[bu] 2
\f[B]socket_dup\f[R]: Primary detection for file descriptor duplication
.IP \[bu] 2
\f[B]sched_process_exec\f[R]: Process execution context
.IP \[bu] 2
\f[B]net_packet_tcp\f[R]: Network traffic analysis
