.\" Automatically generated by Pandoc 3.2
.\"
.TH "TRACEE\-FILELESS\-EXECUTION" "1" "" "" "Tracee Event Manual"
.SS NAME
\f[B]fileless_execution\f[R] \- fileless execution attempt detected
.SS DESCRIPTION
Triggered when fileless execution is detected \- running processes
directly from memory rather than from files on the filesystem.
This security signature identifies sophisticated evasion techniques used
by adversaries to escape traditional file\-based detection mechanisms.
.PP
Fileless execution allows malicious actors to operate without leaving
traditional file artifacts on disk, making detection more challenging
through conventional security tools that focus on file system
monitoring.
.PP
This signature is useful for:
.IP \[bu] 2
\f[B]Advanced threat detection\f[R]: Identify sophisticated evasion
techniques
.IP \[bu] 2
\f[B]Memory\-based attack detection\f[R]: Monitor execution from memory
locations
.IP \[bu] 2
\f[B]Defense evasion monitoring\f[R]: Detect attempts to bypass
file\-based security controls
.SS SIGNATURE METADATA
.IP \[bu] 2
\f[B]ID\f[R]: TRC\-105
.IP \[bu] 2
\f[B]Version\f[R]: 1
.IP \[bu] 2
\f[B]Severity\f[R]: 3 (Moderate to high threat level)
.IP \[bu] 2
\f[B]Category\f[R]: defense\-evasion
.IP \[bu] 2
\f[B]Technique\f[R]: Reflective Code Loading
.IP \[bu] 2
\f[B]MITRE ATT&CK\f[R]: T1620
.SS EVENT SETS
\f[B]signatures\f[R], \f[B]defense_evasion\f[R]
.SS DATA FIELDS
.TP
\f[B]process_info\f[R] (\f[I]object\f[R])
Information about the process executing from memory
.TP
\f[B]execution_context\f[R] (\f[I]object\f[R])
Context information about the fileless execution attempt
.SS DEPENDENCIES
\f[B]System Events:\f[R]
.IP \[bu] 2
sched_process_exec (required): Monitors process execution attempts to
detect memory\-based origins
.SS DETECTION LOGIC
The signature monitors for:
.IP "1." 3
\f[B]Process execution events\f[R] from \f[CR]sched_process_exec\f[R]
.IP "2." 3
\f[B]Memory origin detection\f[R] \- identifies when process origin is
memory rather than filesystem
.IP "3." 3
\f[B]Fileless execution patterns\f[R] \- distinguishes legitimate memory
execution from malicious attempts
.SS USE CASES
.IP \[bu] 2
\f[B]Advanced persistent threat (APT) detection\f[R]: Identify
sophisticated attack techniques
.IP \[bu] 2
\f[B]Malware analysis\f[R]: Detect fileless malware execution patterns
.IP \[bu] 2
\f[B]Incident response\f[R]: Investigate memory\-based attack techniques
.IP \[bu] 2
\f[B]Security monitoring\f[R]: Detect attempts to evade file\-based
security controls
.IP \[bu] 2
\f[B]Forensic analysis\f[R]: Track fileless execution during security
investigations
.SS THREAT LANDSCAPE
Fileless execution is increasingly used by:
.IP \[bu] 2
\f[B]Advanced malware\f[R]: Sophisticated threats avoiding disk
artifacts
.IP \[bu] 2
\f[B]Living\-off\-the\-land attacks\f[R]: Using legitimate tools for
malicious purposes
.IP \[bu] 2
\f[B]Nation\-state actors\f[R]: Advanced persistent threats using
evasion techniques
.IP \[bu] 2
\f[B]Ransomware\f[R]: Modern ransomware variants using fileless
techniques
.SS RELATED EVENTS
.IP \[bu] 2
\f[B]sched_process_exec\f[R]: Primary source event for process execution
monitoring
.IP \[bu] 2
\f[B]dynamic_code_loading\f[R]: Related code loading detection
.IP \[bu] 2
\f[B]process_vm_write_code_injection\f[R]: Memory\-based code injection
detection
.IP \[bu] 2
\f[B]dropped_executable\f[R]: Executable dropping detection for
comparison
