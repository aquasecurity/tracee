.\" Automatically generated by Pandoc 3.2
.\"
.TH "TRACEE\-FTRACE\-HOOK" "1" "" "" "Tracee Event Manual"
.SS NAME
\f[B]ftrace_hook\f[R] \- ftrace function hook detected
.SS DESCRIPTION
Triggered when an ftrace function hook is detected on the system.
Ftrace hooks are kernel tracing mechanisms that can be used for
legitimate system monitoring or potentially malicious purposes such as
rootkits hiding their presence or intercepting system calls.
.PP
This event monitors the function tracing infrastructure to detect when
functions are hooked, providing visibility into both legitimate kernel
tracing activities and potential security threats.
.PP
This event is useful for:
.IP \[bu] 2
\f[B]Rootkit detection\f[R]: Identify malicious function hooks used by
rootkits
.IP \[bu] 2
\f[B]Security monitoring\f[R]: Detect unauthorized kernel function
interception
.IP \[bu] 2
\f[B]System analysis\f[R]: Monitor legitimate kernel tracing activities
.SS EVENT SETS
\f[B]none\f[R]
.SS DATA FIELDS
.TP
\f[B]symbol\f[R] (\f[I]string\f[R])
The symbol (function name) that is being hooked
.TP
\f[B]trampoline\f[R] (\f[I]string\f[R])
The name or address of the ftrace trampoline
.TP
\f[B]callback\f[R] (\f[I]string\f[R])
The callback name or address that will be called when the symbol is
executed
.TP
\f[B]callback_offset\f[R] (\f[I]integer\f[R])
The callback offset inside the function
.TP
\f[B]callback_owner\f[R] (\f[I]string\f[R])
The owner of the callback (kernel module name if applicable)
.TP
\f[B]flags\f[R] (\f[I]string\f[R])
Ftrace flags indicating hook behavior: \- \f[B]R\f[R]: Registers are
passed to the callback \- \f[B]I\f[R]: Callback can change the RIP
register value \- \f[B]D\f[R]: Direct call to the function \-
\f[B]O\f[R]: Callsite\-specific operations \- \f[B]M\f[R]: Function has
I or D flags
.TP
\f[B]count\f[R] (\f[I]integer\f[R])
The number of callbacks registered with the symbol
.SS DEPENDENCIES
\f[B]Self\-triggered:\f[R]
.IP \[bu] 2
Uses internal kernel tracing mechanisms for detection
.SS USE CASES
.IP \[bu] 2
\f[B]Rootkit detection\f[R]: Identify kernel\-level hooks used by
rootkits
.IP \[bu] 2
\f[B]Security incident response\f[R]: Investigate unauthorized kernel
modifications
.IP \[bu] 2
\f[B]System integrity monitoring\f[R]: Verify expected vs.\ actual
kernel hooks
.IP \[bu] 2
\f[B]Forensic analysis\f[R]: Understand kernel hooking patterns during
incidents
.IP \[bu] 2
\f[B]Compliance verification\f[R]: Ensure no unauthorized kernel
modifications
.SS FLAG DESCRIPTIONS
Ftrace flags provide important context about hook behavior:
.IP \[bu] 2
\f[B]R (Registers)\f[R]: Hook receives CPU register state
.IP \[bu] 2
\f[B]I (IP modification)\f[R]: Hook can modify instruction pointer
.IP \[bu] 2
\f[B]D (Direct)\f[R]: Direct function call bypass
.IP \[bu] 2
\f[B]O (Ops\-specific)\f[R]: Custom operation handling
.IP \[bu] 2
\f[B]M (Modified)\f[R]: Function has been modified with I or D flags
.SS RELATED EVENTS
.IP \[bu] 2
\f[B]hidden_kernel_module\f[R]: Hidden kernel module detection
.IP \[bu] 2
\f[B]hooked_syscall\f[R]: System call hook detection
.IP \[bu] 2
\f[B]symbols_loaded\f[R]: Symbol loading detection
.IP \[bu] 2
\f[B]syscall_table_hooking\f[R]: System call table modification
detection
