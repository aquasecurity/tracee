.\" Automatically generated by Pandoc 3.2
.\"
.TH "TRACEE\-SYSTEM\-REQUEST\-KEY\-MODIFICATION" "1" "" "" "Tracee Event Manual"
.SS NAME
\f[B]system_request_key_mod\f[R] \- detect modifications to System
Request Key configuration
.SS DESCRIPTION
This event detects modifications to the System Request Key (SysRq)
configuration files.
The SysRq mechanism provides direct kernel access through key
combinations, allowing low\-level commands to be executed regardless of
system state.
This powerful feature can perform actions like immediate system
shutdown, memory dumps, or kernel debugging.
.PP
Due to its privileged position and powerful capabilities, modifications
to SysRq configuration (/proc/sys/kernel/sysrq and /proc/sysrq\-trigger)
could indicate attempts to manipulate system state or gather sensitive
information for container escapes.
.SS SIGNATURE METADATA
.IP \[bu] 2
\f[B]ID\f[R]: TRC\-1031
.IP \[bu] 2
\f[B]Version\f[R]: 1
.IP \[bu] 2
\f[B]Severity\f[R]: 3
.IP \[bu] 2
\f[B]Category\f[R]: privilege\-escalation
.IP \[bu] 2
\f[B]Technique\f[R]: Escape to Host
.IP \[bu] 2
\f[B]MITRE ID\f[R]:
attack\-pattern\[en]4a5b7ade\-8bb5\-4853\-84ed\-23f262002665
.IP \[bu] 2
\f[B]MITRE External ID\f[R]: T1611
.SS EVENT SETS
\f[B]signatures\f[R], \f[B]default\f[R]
.SS DATA FIELDS
This signature event uses fields from the underlying security_file_open
event:
.TP
\f[B]pathname\f[R] (\f[I]string\f[R])
Path to the SysRq configuration being accessed
.TP
\f[B]flags\f[R] (\f[I]string\f[R])
File access flags indicating modification
.TP
\f[B]pid\f[R] (\f[I]int32\f[R])
Process ID attempting the modification
.TP
\f[B]uid\f[R] (\f[I]uint32\f[R])
User ID performing the modification
.SS DEPENDENCIES
.IP \[bu] 2
\f[CR]security_file_open\f[R]: Monitor configuration file access
.SS USE CASES
.IP \[bu] 2
\f[B]System protection\f[R]: Prevent unauthorized SysRq access
.IP \[bu] 2
\f[B]Container security\f[R]: Detect potential escape attempts
.IP \[bu] 2
\f[B]System integrity\f[R]: Monitor critical configuration
.IP \[bu] 2
\f[B]Incident response\f[R]: Track system manipulation
.SS SYSRQ CAPABILITIES
Critical system functions:
.IP \[bu] 2
Emergency sync/reboot/shutdown
.IP \[bu] 2
Process termination
.IP \[bu] 2
Memory dumps
.IP \[bu] 2
Kernel debugging
.IP \[bu] 2
CPU register dumps
.IP \[bu] 2
Unraw keyboard mode
.IP \[bu] 2
OOM killer control
.SS ATTACK VECTORS
Common malicious uses include:
.IP \[bu] 2
\f[B]System disruption\f[R]: Force shutdowns/reboots
.IP \[bu] 2
\f[B]Information gathering\f[R]: Memory/register dumps
.IP \[bu] 2
\f[B]Container escape\f[R]: Host information leakage
.IP \[bu] 2
\f[B]Denial of service\f[R]: System resource control
.SS RISK ASSESSMENT
Risk factors to consider:
.IP \[bu] 2
\f[B]System\-Wide Impact\f[R]: Affects entire system
.IP \[bu] 2
\f[B]Immediate Effect\f[R]: Direct kernel access
.IP \[bu] 2
\f[B]Recovery Prevention\f[R]: Can prevent forensics
.IP \[bu] 2
\f[B]Information Exposure\f[R]: System state visible
.SS LEGITIMATE USES
Valid modification scenarios:
.IP \[bu] 2
System administration
.IP \[bu] 2
Emergency response
.IP \[bu] 2
Kernel debugging
.IP \[bu] 2
System recovery
.IP \[bu] 2
Performance analysis
.SS MITIGATION
Recommended security controls:
.IP \[bu] 2
Disable SysRq in production
.IP \[bu] 2
Access restrictions
.IP \[bu] 2
Configuration monitoring
.IP \[bu] 2
Audit logging
.IP \[bu] 2
Container isolation
.SS RELATED EVENTS
.IP \[bu] 2
\f[B]proc_kcore_read\f[R]: Kernel memory access
.IP \[bu] 2
\f[B]security_file_open\f[R]: File access monitoring
.IP \[bu] 2
\f[B]proc_mem_access\f[R]: Process memory access
.IP \[bu] 2
\f[B]container_create\f[R]: Container lifecycle events
