.\" Automatically generated by Pandoc 3.2
.\"
.TH "TRACEE\-SECURITY\-BPRM\-CHECK" "1" "" "" "Tracee Event Manual"
.SS NAME
\f[B]security_bprm_check\f[R] \- verify permissions prior to binary
handler search
.SS DESCRIPTION
Triggered during the execution of a binary via execve or execveat, just
before the kernel begins searching for the specific binary handler.
This LSM (Linux Security Module) hook event occurs at a critical point
where new process attributes are being set but the context is still that
of the pre\-execution process.
.PP
This event is particularly valuable when the pre\-execution context is
significant, as it provides resolved path and binary details.
While it offers less comprehensive information than sched_process_exec,
it captures the execution state at a unique point in the process
lifecycle.
.PP
This event is useful for:
.IP \[bu] 2
\f[B]Permission verification\f[R]: Monitor execution permission checks
.IP \[bu] 2
\f[B]Binary execution tracking\f[R]: Track program execution with
resolved paths
.IP \[bu] 2
\f[B]Pre\-execution analysis\f[R]: Examine process state before context
change
.IP \[bu] 2
\f[B]Security monitoring\f[R]: Verify execution permissions and context
.SS EVENT SETS
\f[B]none\f[R]
.SS DATA FIELDS
.TP
\f[B]pathname\f[R] (\f[I]string\f[R])
The resolved path of the file being executed
.TP
\f[B]dev\f[R] (\f[I]uint32\f[R])
The device identifier of the executed file
.TP
\f[B]inode\f[R] (\f[I]uint64\f[R])
The inode number of the executed file
.TP
\f[B]argv\f[R] (\f[I][]string\f[R])
The arguments provided during execution
.TP
\f[B]envp\f[R] (\f[I][]string\f[R])
The environment variables passed during execution (optional, filled only
if requested)
.SS DEPENDENCIES
\f[B]LSM Hook:\f[R]
.IP \[bu] 2
security_bprm_check (required): LSM hook for execution phase before
context change
.PP
\f[B]Tracepoint:\f[R]
.IP \[bu] 2
sys_enter (required): Used to capture argv from syscall arguments
.SS USE CASES
.IP \[bu] 2
\f[B]Security monitoring\f[R]: Verify execution permissions and context
.IP \[bu] 2
\f[B]Binary tracking\f[R]: Monitor program execution with resolved paths
.IP \[bu] 2
\f[B]Context analysis\f[R]: Examine process state before execution
.IP \[bu] 2
\f[B]Permission auditing\f[R]: Track execution permission checks
.IP \[bu] 2
\f[B]Environment monitoring\f[R]: Analyze execution context and
variables
.SS EXECUTION CONTEXT
The event captures the execution state at a unique point:
.IP \[bu] 2
\f[B]Pre\-handler search\f[R]: Before binary format handler selection
.IP \[bu] 2
\f[B]Pre\-context change\f[R]: Original process context still available
.IP \[bu] 2
\f[B]Post\-path resolution\f[R]: Full path information available
.IP \[bu] 2
\f[B]Pre\-execution\f[R]: Before actual program loading
.SS SECURITY CONSIDERATIONS
Important security aspects to monitor:
.IP \[bu] 2
\f[B]Permission verification\f[R]: Check execution permissions
.IP \[bu] 2
\f[B]Path resolution\f[R]: Track resolved binary paths
.IP \[bu] 2
\f[B]Environment inspection\f[R]: Monitor execution context
.IP \[bu] 2
\f[B]Argument validation\f[R]: Check execution parameters
.IP \[bu] 2
\f[B]TOCTOU concerns\f[R]: Be aware of potential race conditions
.SS LIMITATIONS
.IP \[bu] 2
\f[B]TOCTOU\f[R]: Arguments and environment subject to race conditions
.IP \[bu] 2
\f[B]Partial information\f[R]: Less comprehensive than
sched_process_exec
.IP \[bu] 2
\f[B]Optional data\f[R]: Environment variables only if configured
.IP \[bu] 2
\f[B]Pre\-execution only\f[R]: No information about actual execution
success
.SS RELATED EVENTS
.IP \[bu] 2
\f[B]sched_process_exec\f[R]: Process execution after context change
.IP \[bu] 2
\f[B]execve\f[R]: System call for executing programs
.IP \[bu] 2
\f[B]execveat\f[R]: Extended program execution system call
