.\" Automatically generated by Pandoc 3.2
.\"
.TH "TRACEE\-KALLSYMS\-LOOKUP\-NAME" "1" "" "" "Tracee Event Manual"
.SS NAME
\f[B]kallsyms_lookup_name\f[R] \- kernel symbol address lookup
.SS DESCRIPTION
Triggered when the \f[CR]kallsyms_lookup_name()\f[R] kernel function is
called to look up the address of a kernel symbol.
This function is primarily used by external kernel extensions such as
kernel modules, eBPF programs, and other kernel\-level code that needs
to resolve symbol addresses dynamically.
.PP
Monitoring symbol lookups can reveal potentially suspicious activity,
such as rootkits or malicious kernel modules attempting to locate and
hook kernel functions, or legitimate kernel extensions resolving symbol
addresses for their operations.
.PP
This event is useful for:
.IP \[bu] 2
\f[B]Kernel security monitoring\f[R]: Detect attempts to locate
sensitive kernel symbols
.IP \[bu] 2
\f[B]Rootkit detection\f[R]: Identify malicious modules looking up
symbols for hooking
.IP \[bu] 2
\f[B]Kernel extension monitoring\f[R]: Track legitimate kernel module
symbol resolution
.SS EVENT SETS
\f[B]none\f[R]
.SS DATA FIELDS
.TP
\f[B]symbol_name\f[R] (\f[I]string\f[R])
The name of the kernel symbol being looked up
.TP
\f[B]symbol_address\f[R] (\f[I]trace.Pointer\f[R])
The resolved address of the symbol returned by the function (0 if symbol
not found)
.SS DEPENDENCIES
\f[B]Kernel Probes:\f[R]
.IP \[bu] 2
kallsyms_lookup_name (kprobe + kretprobe, required): Hooks the kernel
symbol lookup function on entry and exit
.SS USE CASES
.IP \[bu] 2
\f[B]Security monitoring\f[R]: Detect attempts to locate sensitive
kernel symbols for malicious purposes
.IP \[bu] 2
\f[B]Rootkit detection\f[R]: Identify malicious kernel modules looking
up symbols for function hooking
.IP \[bu] 2
\f[B]Kernel debugging\f[R]: Monitor symbol resolution during kernel
development and debugging
.IP \[bu] 2
\f[B]System analysis\f[R]: Understand kernel extension behavior and
dependencies
.IP \[bu] 2
\f[B]Forensic analysis\f[R]: Track symbol lookup patterns during
incident investigation
.SS COMMON SYMBOL LOOKUPS
Legitimate kernel extensions often look up:
.IP \[bu] 2
\f[B]System call table symbols\f[R]: For syscall interception or
monitoring
.IP \[bu] 2
\f[B]VFS operation symbols\f[R]: For filesystem operation hooking
.IP \[bu] 2
\f[B]Network stack symbols\f[R]: For network monitoring or filtering
.IP \[bu] 2
\f[B]Security framework symbols\f[R]: For security policy enforcement
.IP \[bu] 2
\f[B]Hardware abstraction symbols\f[R]: For device driver functionality
.SS SUSPICIOUS PATTERNS
Monitor for lookups of sensitive symbols:
.IP \[bu] 2
\f[B]sys_call_table\f[R]: System call table (common rootkit target)
.IP \[bu] 2
\f[B]security_* functions\f[R]: Security framework functions
.IP \[bu] 2
\f[B]do_exit\f[R], \f[B]do_fork\f[R]: Process lifecycle functions
.IP \[bu] 2
\f[B]vfs_* functions\f[R]: Virtual filesystem operations
.IP \[bu] 2
\f[B]network stack functions\f[R]: Network monitoring points
.SS SYMBOL RESOLUTION PROCESS
The \f[CR]kallsyms_lookup_name\f[R] function:
.IP "1." 3
\f[B]Searches symbol table\f[R]: Looks through the kernel symbol table
.IP "2." 3
\f[B]Name matching\f[R]: Performs string comparison for symbol name
.IP "3." 3
\f[B]Address resolution\f[R]: Returns the memory address if found
.IP "4." 3
\f[B]Permission checking\f[R]: May verify caller permissions for
sensitive symbols
.SS SECURITY IMPLICATIONS
Symbol address knowledge enables:
.IP \[bu] 2
\f[B]Function hooking\f[R]: Redirecting function calls to malicious code
.IP \[bu] 2
\f[B]Data structure access\f[R]: Direct manipulation of kernel data
structures
.IP \[bu] 2
\f[B]Control flow hijacking\f[R]: Altering kernel execution flow
.IP \[bu] 2
\f[B]Information disclosure\f[R]: Bypassing kernel address space layout
randomization (KASLR)
.SS LEGITIMATE USE CASES
.IP \[bu] 2
\f[B]Device drivers\f[R]: Hardware abstraction and device management
.IP \[bu] 2
\f[B]Security modules\f[R]: LSM implementations and security frameworks
.IP \[bu] 2
\f[B]Debugging tools\f[R]: Kernel debuggers and profiling tools
.IP \[bu] 2
\f[B]Virtualization\f[R]: Hypervisor and container runtime components
.IP \[bu] 2
\f[B]Monitoring tools\f[R]: System monitoring and observability
frameworks
.SS RELATED EVENTS
.IP \[bu] 2
\f[B]module_load\f[R]: Kernel module loading events
.IP \[bu] 2
\f[B]init_module\f[R]: Module initialization system call
.IP \[bu] 2
\f[B]symbols_loaded\f[R]: Symbol loading in user\-space libraries
.IP \[bu] 2
\f[B]shared_object_loaded\f[R]: Shared library loading events
