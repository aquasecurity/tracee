.\" Automatically generated by Pandoc 3.2
.\"
.TH "TRACEE\-FILE\-MODIFICATION" "1" "" "" "Tracee Event Manual"
.SS NAME
\f[B]file_modification\f[R] \- a file was modified by a process
.SS DESCRIPTION
Triggered when a file is modified by a process.
This event is submitted once between the open and close of the file to
reduce event volume while still providing modification detection
capabilities.
.PP
The event monitors file changes by tracking file open/close operations
and detecting ctime changes during the file\[cq]s lifetime.
It uses kernel probes to efficiently capture file modification events
without overwhelming the system with excessive events for frequently
modified files.
.PP
This event is useful for:
.IP \[bu] 2
\f[B]File integrity monitoring\f[R]: Track unauthorized file
modifications
.IP \[bu] 2
\f[B]Security monitoring\f[R]: Detect malicious file changes
.IP \[bu] 2
\f[B]Audit compliance\f[R]: Monitor file access and modification
patterns
.IP \[bu] 2
\f[B]System monitoring\f[R]: Track application file I/O behavior
.SS EVENT SETS
\f[B]none\f[R]
.SS DATA FIELDS
.TP
\f[B]file_path\f[R] (\f[I]string\f[R])
The path of the file that was modified
.TP
\f[B]dev\f[R] (\f[I]uint32\f[R])
The device identifier that contains this file
.TP
\f[B]inode\f[R] (\f[I]uint64\f[R])
The inode number of the modified file
.TP
\f[B]old_ctime\f[R] (\f[I]uint64\f[R])
The ctime (change time) of the file before modification
.TP
\f[B]new_ctime\f[R] (\f[I]uint64\f[R])
The ctime (change time) of the file after modification
.SS DEPENDENCIES
\f[B]Kernel Probes:\f[R]
.IP \[bu] 2
fd_install (kprobe, required): Captures file open operations to track
files for modification events
.IP \[bu] 2
filp_close (kprobe, required): Captures file close operations to remove
files from tracking cache
.IP \[bu] 2
file_update_time (kprobe + kretprobe, required): Detects ctime changes
during file updates
.IP \[bu] 2
file_modified (kprobe + kretprobe, optional): Alternative detection of
file ctime changes (kernels >= 5.3)
.SS USE CASES
.IP \[bu] 2
\f[B]File integrity monitoring\f[R]: Detect unauthorized changes to
critical system files
.IP \[bu] 2
\f[B]Security auditing\f[R]: Monitor file modifications for compliance
and security
.IP \[bu] 2
\f[B]Malware detection\f[R]: Identify suspicious file modification
patterns
.IP \[bu] 2
\f[B]System debugging\f[R]: Track application file modification behavior
.IP \[bu] 2
\f[B]Backup systems\f[R]: Trigger backup operations based on file
changes
.SS IMPLEMENTATION NOTES
.IP \[bu] 2
\f[B]Event deduplication\f[R]: Only the first modification event is
submitted between file open and close
.IP \[bu] 2
\f[B]LRU caching\f[R]: Uses LRU map to track files, which may cause
occasional duplicate events when cache is full
.IP \[bu] 2
\f[B]Performance optimization\f[R]: Reduces event volume for frequently
modified files
.SS LIMITATIONS
The event may occasionally be submitted more than once between file open
and close due to LRU cache eviction when the cache is full, causing
tracking information to be lost.
.SS RELATED EVENTS
.IP \[bu] 2
\f[B]vfs_write\f[R]: Virtual filesystem write operations
.IP \[bu] 2
\f[B]vfs_read\f[R]: Virtual filesystem read operations
.IP \[bu] 2
\f[B]security_file_open\f[R]: LSM hook for file open operations
.IP \[bu] 2
\f[B]do_truncate\f[R]: File truncation operations
